{"ast":null,"code":"import _classCallCheck from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ben.cavenagh/Desktop/Personal/sean/src/DisplayWork/DisplayWork.js\";\nimport React, { Component } from 'react';\nimport classes from './DisplayWork.module.scss';\nimport ProjectModal from '../ProjectModal/ProjectModal';\n\nvar DisplayWork =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayWork, _Component);\n\n  function DisplayWork(props) {\n    var _this;\n\n    _classCallCheck(this, DisplayWork);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayWork).call(this, props));\n    _this.state = {\n      currentPage: 1,\n      projectsPerPage: 3,\n      isProjectModalOpen: true\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DisplayWork, [{\n    key: \"handleChangePage\",\n    value: function handleChangePage(event) {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var backgroundImage = 'url(https://source.unsplash.com/kKzbyDeb62M) center center';\n\n      if (this.props.wood) {\n        backgroundImage = 'url(https://source.unsplash.com/oJ7SV6vQfBA) center center';\n      }\n\n      var projectModal = '';\n\n      if (this.state.isProjectModalOpen) {\n        projectModal = React.createElement(ProjectModal, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      }\n\n      var _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          projectsPerPage = _this$state.projectsPerPage;\n      var projects = this.props.projects; //Logic for displaying projects\n\n      var indexOfLastProject = currentPage * projectsPerPage;\n      var indexOfFirstProject = indexOfLastProject - projectsPerPage;\n      var currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n      var renderProjects = currentProjects.map(function (project, index) {\n        return React.createElement(\"div\", {\n          className: classes.Project,\n          style: {\n            background: backgroundImage\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.ProjectInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: classes.ProjectTitle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, project.name), React.createElement(\"p\", {\n          className: classes.ProjectPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, project.price), React.createElement(\"button\", {\n          className: classes.ProjectDetailsButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"View Details\")));\n      }); //Logic for displaying page numbers\n\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(projects.length / projectsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var renderPageNumbers = pageNumbers.map(function (number) {\n        var currentPageClass = '';\n\n        if (number === currentPage) {\n          currentPageClass = classes.CurrentPage;\n        }\n\n        return React.createElement(\"div\", {\n          key: number,\n          id: number,\n          onClick: _this2.handleChangePage,\n          className: currentPageClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, number);\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        className: classes.DisplayWorkContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, renderProjects), React.createElement(\"div\", {\n        className: classes.Pager,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, renderPageNumbers), projectModal);\n    }\n  }]);\n\n  return DisplayWork;\n}(Component);\n\nexport default DisplayWork;","map":{"version":3,"sources":["/Users/ben.cavenagh/Desktop/Personal/sean/src/DisplayWork/DisplayWork.js"],"names":["React","Component","classes","ProjectModal","DisplayWork","props","state","currentPage","projectsPerPage","isProjectModalOpen","handleChangePage","bind","event","setState","Number","target","id","backgroundImage","wood","projectModal","projects","indexOfLastProject","indexOfFirstProject","currentProjects","slice","renderProjects","map","project","index","Project","background","ProjectInfo","ProjectTitle","name","ProjectPrice","price","ProjectDetailsButton","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","currentPageClass","CurrentPage","title","DisplayWorkContainer","Pager"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './DisplayWork.module.scss';\nimport ProjectModal from '../ProjectModal/ProjectModal';\n\nclass DisplayWork extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            currentPage:1,\n            projectsPerPage:3,\n            isProjectModalOpen:true\n        }\n        this.handleChangePage = this.handleChangePage.bind(this);\n    }\n    handleChangePage(event){\n        this.setState({\n            currentPage: Number(event.target.id)\n        });\n    }\n    render(){\n        let backgroundImage = 'url(https://source.unsplash.com/kKzbyDeb62M) center center';\n        if(this.props.wood){\n            backgroundImage = 'url(https://source.unsplash.com/oJ7SV6vQfBA) center center';\n        }\n\n        let projectModal = ''\n        if(this.state.isProjectModalOpen){\n            projectModal = <ProjectModal />;\n        }\n\n        const { currentPage, projectsPerPage } = this.state;\n        const projects = this.props.projects;\n\n        //Logic for displaying projects\n        const indexOfLastProject = currentPage * projectsPerPage;\n        const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n        const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n\n        const renderProjects = currentProjects.map((project, index) => {\n            return (\n                <div className={classes.Project} style={{background: backgroundImage}}>\n                    <div className={classes.ProjectInfo}>\n                        <h3 className={classes.ProjectTitle}>{project.name}</h3>\n                        <p className={classes.ProjectPrice}>{project.price}</p>\n                        <button className={classes.ProjectDetailsButton}>View Details</button>\n                    </div>\n                </div>\n            )\n        });\n\n        //Logic for displaying page numbers\n        const pageNumbers = [];\n        for(let i = 1; i <= Math.ceil(projects.length / projectsPerPage); i++){\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            let currentPageClass = ''\n            if(number === currentPage){currentPageClass = classes.CurrentPage}\n            return (\n                <div key={number} id={number} onClick={this.handleChangePage} className={currentPageClass}>{number}</div>\n            )\n        })\n\n        return(\n            <>\n            <h3 className={classes.title}>{this.props.title}</h3>\n            <div className={classes.DisplayWorkContainer}>\n                {renderProjects}\n            </div>\n            <div className={classes.Pager}>{renderPageNumbers}</div>\n            {projectModal}\n            </>\n        );\n    }\n}\nexport default DisplayWork; "]},"metadata":{},"sourceType":"module"}