{"ast":null,"code":"import _classCallCheck from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ben.cavenagh/Desktop/Personal/sean/src/ProjectModal/RequestProjectForm/RequestProjectForm.js\";\nimport React, { Component } from 'react';\nimport classes from './RequestProjectForm.module.scss';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport classNames from 'classnames';\nimport emailjs from 'emailjs-com';\n\nvar RequestProjectForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RequestProjectForm, _Component);\n\n  function RequestProjectForm(props) {\n    var _this;\n\n    _classCallCheck(this, RequestProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RequestProjectForm).call(this, props));\n\n    _this.sendFeedback = function (values) {\n      console.log('serviceId:' + _this.state.service_id);\n      console.log('templateId:' + _this.state.template_id);\n      console.log('userId:' + _this.state.user_id); // this.setState({\n      //     formSubmitted: true\n      // });\n\n      window.emailjs.send(_this.state.service_id, _this.state.templateId, values, _this.state.user_id).then(function (res) {\n        _this.setState({\n          finishedSend: true\n        });\n      }) // Handle errors here however you like\n      .catch(function (err) {\n        return _this.setState({\n          snackbarOpen: true,\n          errorMessage: \"You have entered an invalid email address!\"\n        }), err;\n      });\n    };\n\n    _this.state = {\n      service_id: process.env.REACT_APP_EMAIL_SERVICE_ID,\n      template_id: process.env.REACT_APP_EMAIL_TEMPLATE_ID,\n      user_id: process.env.REACT_APP_EMAIL_USER_ID\n    };\n    return _this;\n  }\n\n  _createClass(RequestProjectForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: classes.RequestProjectForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Request this project\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.service_id), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.template_id), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.user_id), React.createElement(Formik, {\n        initialValues: {\n          name: '',\n          email: '',\n          message: ''\n        },\n        validate: function validate(values) {\n          var errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n          setTimeout(function () {\n            // alert(JSON.stringify(values, null, 2));\n            _this2.sendFeedback(values);\n\n            console.log(values);\n            setSubmitting(false);\n          }, 400);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, function (_ref2) {\n        var isSubmitting = _ref2.isSubmitting;\n        return React.createElement(Form, {\n          className: classes.Form,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Field, {\n          type: \"name\",\n          name: \"name\",\n          placeholder: \"Name*\",\n          className: classes.FormInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(Field, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email*\",\n          className: classes.FormInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(Field, {\n          component: \"textarea\",\n          name: \"message\",\n          placeholder: \"Message*\",\n          className: classNames(classes.FormInput, classes.TextArea),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"password\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Submit\"));\n      }));\n    }\n  }]);\n\n  return RequestProjectForm;\n}(Component);\n\nexport default RequestProjectForm;","map":{"version":3,"sources":["/Users/ben.cavenagh/Desktop/Personal/sean/src/ProjectModal/RequestProjectForm/RequestProjectForm.js"],"names":["React","Component","classes","Formik","Form","Field","ErrorMessage","classNames","emailjs","RequestProjectForm","props","sendFeedback","values","console","log","state","service_id","template_id","user_id","window","send","templateId","then","res","setState","finishedSend","catch","err","snackbarOpen","errorMessage","process","env","REACT_APP_EMAIL_SERVICE_ID","REACT_APP_EMAIL_TEMPLATE_ID","REACT_APP_EMAIL_USER_ID","name","email","message","errors","test","setSubmitting","setTimeout","isSubmitting","FormInput","TextArea"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './RequestProjectForm.module.scss';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport classNames from 'classnames';\nimport emailjs from 'emailjs-com';\n\n\nclass RequestProjectForm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            service_id: process.env.REACT_APP_EMAIL_SERVICE_ID,\n            template_id: process.env.REACT_APP_EMAIL_TEMPLATE_ID,\n            user_id:process.env.REACT_APP_EMAIL_USER_ID,\n        }\n    }\n    sendFeedback = (values) => {\n        console.log('serviceId:' + this.state.service_id)\n        console.log('templateId:' + this.state.template_id)\n        console.log('userId:' + this.state.user_id)\n        // this.setState({\n        //     formSubmitted: true\n        // });\n        window.emailjs\n          .send(\n                this.state.service_id, \n                this.state.templateId, \n                values, \n                this.state.user_id\n                )\n                .then(res => {\n                    this.setState({\n                        finishedSend: true\n                    });\n                })\n          // Handle errors here however you like\n          .catch(err => (this.setState({\n                snackbarOpen: true,\n                errorMessage: \"You have entered an invalid email address!\"\n            }), err));\n    }\n    render(){\n        return(\n            <div className={classes.RequestProjectForm}>\n                <h4>Request this project</h4>\n                <p>{this.state.service_id}</p>\n                <p>{this.state.template_id}</p>\n                <p>{this.state.user_id}</p>\n                <Formik\n                    initialValues={{ name: '', email: '', message: '' }}\n                    validate={values => {\n                        let errors = {};\n                        if (!values.email) {\n                            errors.email = 'Required';\n                        } else if (\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                            errors.email = 'Invalid email address';\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                        // alert(JSON.stringify(values, null, 2));\n                        this.sendFeedback(values);\n                        console.log(values)\n                        setSubmitting(false);\n                        }, 400);\n                    }}\n                    \n                    >\n                    {({ isSubmitting }) => (\n                        <Form className={classes.Form}>\n                            <Field type=\"name\" name=\"name\" placeholder=\"Name*\" className={classes.FormInput}/>\n                            <Field type=\"email\" name=\"email\" placeholder=\"Email*\" className={classes.FormInput}/>\n                            <ErrorMessage name=\"email\" component=\"div\" />\n                            <Field component=\"textarea\" name=\"message\" placeholder=\"Message*\" className={classNames(classes.FormInput, classes.TextArea)}/>\n                            <ErrorMessage name=\"password\" component=\"div\" />\n                            <button type=\"submit\" disabled={isSubmitting}>\n                                Submit\n                            </button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}\nexport default RequestProjectForm; "]},"metadata":{},"sourceType":"module"}