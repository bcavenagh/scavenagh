{"ast":null,"code":"import _classCallCheck from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ben.cavenagh/Desktop/Personal/sean/src/DisplayWork/DisplayWork.js\";\n// import React from 'react';\n// import classes from './DisplayWork.module.scss';\n// const displayWork = (props) => {\n//     return(\n//     );\n// };\n// export default displayWork; \nimport React, { Component } from 'react';\nimport classes from './DisplayWork.module.scss';\n\nvar DisplayWork =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayWork, _Component);\n\n  function DisplayWork(props) {\n    var _this;\n\n    _classCallCheck(this, DisplayWork);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayWork).call(this, props));\n    _this.state = {\n      currentPage: 1,\n      projectsPerPage: 2\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DisplayWork, [{\n    key: \"handleChangePage\",\n    value: function handleChangePage(event) {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          projectsPerPage = _this$state.projectsPerPage;\n      var projects = this.props.projects; //Logic for displaying projects\n\n      var indexOfLastProject = currentPage * projectsPerPage;\n      var indexOfFirstProject = indexOfLastProject - projectsPerPage;\n      var currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n      var renderProjects = currentProjects.map(function (project, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, project.name);\n      }); //Logic for displaying page numbers\n\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(projects.length / projectsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var renderPageNumbers = pageNumbers.map(function (number) {\n        return React.createElement(\"li\", {\n          key: number,\n          id: number,\n          onClick: _this2.handleChangePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, number);\n      });\n      return React.createElement(\"div\", {\n        className: classes.DisplayWorkContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, renderProjects), React.createElement(\"ul\", {\n        id: \"pages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, renderPageNumbers));\n    }\n  }]);\n\n  return DisplayWork;\n}(Component);\n\nexport default DisplayWork;","map":{"version":3,"sources":["/Users/ben.cavenagh/Desktop/Personal/sean/src/DisplayWork/DisplayWork.js"],"names":["React","Component","classes","DisplayWork","props","state","currentPage","projectsPerPage","handleChangePage","bind","event","setState","Number","target","id","projects","indexOfLastProject","indexOfFirstProject","currentProjects","slice","renderProjects","map","project","index","name","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","DisplayWorkContainer"],"mappings":";;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAC,CADH;AAETC,MAAAA,eAAe,EAAC;AAFP,KAAb;AAIA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AANc;AAOjB;;;;qCACgBC,K,EAAM;AACnB,WAAKC,QAAL,CAAc;AACVL,QAAAA,WAAW,EAAEM,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,EAAd;AADT,OAAd;AAGH;;;6BACO;AAAA;;AAAA,wBAEqC,KAAKT,KAF1C;AAAA,UAEIC,WAFJ,eAEIA,WAFJ;AAAA,UAEiBC,eAFjB,eAEiBA,eAFjB;AAGJ,UAAMQ,QAAQ,GAAG,KAAKX,KAAL,CAAWW,QAA5B,CAHI,CAKJ;;AACA,UAAMC,kBAAkB,GAAGV,WAAW,GAAGC,eAAzC;AACA,UAAMU,mBAAmB,GAAGD,kBAAkB,GAAGT,eAAjD;AACA,UAAMW,eAAe,GAAGH,QAAQ,CAACI,KAAT,CAAeF,mBAAf,EAAoCD,kBAApC,CAAxB;AAEA,UAAMI,cAAc,GAAGF,eAAe,CAACG,GAAhB,CAAoB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC3D,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,OAAO,CAACE,IAAzB,CAAP;AACH,OAFsB,CAAvB,CAVI,CAcJ;;AACA,UAAMC,WAAW,GAAG,EAApB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUb,QAAQ,CAACc,MAAT,GAAkBtB,eAA5B,CAApB,EAAkEmB,CAAC,EAAnE,EAAsE;AAClED,QAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACH;;AAED,UAAMK,iBAAiB,GAAGN,WAAW,CAACJ,GAAZ,CAAgB,UAAAW,MAAM,EAAI;AAChD,eACI;AAAI,UAAA,GAAG,EAAEA,MAAT;AAAiB,UAAA,EAAE,EAAEA,MAArB;AAA6B,UAAA,OAAO,EAAE,MAAI,CAACxB,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8DwB,MAA9D,CADJ;AAGH,OAJyB,CAA1B;AAMA,aACI;AAAK,QAAA,SAAS,EAAE9B,OAAO,CAAC+B,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKb,cAAL,CADJ,EAEI;AAAI,QAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBW,iBAAhB,CAFJ,CADJ;AAgBH;;;;EAxDqB9B,S;;AA0D1B,eAAeE,WAAf","sourcesContent":["// import React from 'react';\n// import classes from './DisplayWork.module.scss';\n\n// const displayWork = (props) => {\n//     return(\n        \n//     );\n// };\n\n// export default displayWork; \n\nimport React, { Component } from 'react';\nimport classes from './DisplayWork.module.scss';\n\nclass DisplayWork extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            currentPage:1,\n            projectsPerPage:2\n        }\n        this.handleChangePage = this.handleChangePage.bind(this);\n    }\n    handleChangePage(event){\n        this.setState({\n            currentPage: Number(event.target.id)\n        });\n    }\n    render(){\n\n        const { currentPage, projectsPerPage } = this.state;\n        const projects = this.props.projects;\n\n        //Logic for displaying projects\n        const indexOfLastProject = currentPage * projectsPerPage;\n        const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n        const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n\n        const renderProjects = currentProjects.map((project, index) => {\n            return <li key={index}>{project.name}</li>\n        });\n\n        //Logic for displaying page numbers\n        const pageNumbers = [];\n        for(let i = 1; i <= Math.ceil(projects.length / projectsPerPage); i++){\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            return (\n                <li key={number} id={number} onClick={this.handleChangePage}>{number}</li>\n            )\n        })\n\n        return(\n            <div className={classes.DisplayWorkContainer}>\n                <ul>{renderProjects}</ul>\n                <ul id=\"pages\">{renderPageNumbers}</ul>\n                {/* {this.props.projects.map((projects, index) => \n                    <div className={classes.Project}>\n                        <img src=\"https://via.placeholder.com/250\"/>\n                        <div className={classes.ProjectInfo}>\n                            <h3 className={classes.ProjectTitle}>{projects.name}</h3>\n                            <p className={classes.ProjectPrice}>{projects.price}</p>\n                            <button className={classes.ProjectDetailsButton}>View Details</button>\n                        </div>\n                    </div>\n                )} */}\n            </div>\n        );\n    }\n}\nexport default DisplayWork; "]},"metadata":{},"sourceType":"module"}