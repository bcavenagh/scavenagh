{"ast":null,"code":"import _classCallCheck from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ben.cavenagh/Desktop/Personal/sean/src/DisplayWork/DisplayWork.js\";\nimport React, { Component } from 'react';\nimport classes from './DisplayWork.module.scss';\nimport ProjectModal from '../ProjectModal/ProjectModal';\n\nvar DisplayWork =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DisplayWork, _Component);\n\n  function DisplayWork(props) {\n    var _this;\n\n    _classCallCheck(this, DisplayWork);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplayWork).call(this, props));\n    _this.state = {\n      currentPage: 1,\n      projectsPerPage: 3,\n      isProjectModalOpen: false,\n      projectModalObject: {}\n    };\n    _this.handleChangePage = _this.handleChangePage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.openProjectModal = _this.openProjectModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DisplayWork, [{\n    key: \"handleChangePage\",\n    value: function handleChangePage(event) {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n  }, {\n    key: \"openProjectModal\",\n    value: function openProjectModal(project) {\n      console.log(project);\n      this.setState({\n        projectModalObject: project,\n        isProjectModalOpen: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var backgroundImage = 'url(https://source.unsplash.com/kKzbyDeb62M) center center';\n\n      if (this.props.wood) {\n        backgroundImage = 'url(https://source.unsplash.com/oJ7SV6vQfBA) center center';\n      }\n\n      var _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          projectsPerPage = _this$state.projectsPerPage;\n      var projects = this.props.projects; //Logic for displaying projects\n\n      var indexOfLastProject = currentPage * projectsPerPage;\n      var indexOfFirstProject = indexOfLastProject - projectsPerPage;\n      var currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n      var renderProjects = currentProjects.map(function (project, index) {\n        return React.createElement(\"div\", {\n          className: classes.Project,\n          style: {\n            background: backgroundImage\n          },\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.ProjectInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: classes.ProjectTitle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, project.name), React.createElement(\"p\", {\n          className: classes.ProjectPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, project.price), React.createElement(\"button\", {\n          className: classes.ProjectDetailsButton,\n          onClick: function onClick() {\n            return _this2.openProjectModal(project);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"View Details\")));\n      }); //Logic for displaying page numbers\n\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(projects.length / projectsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var renderPageNumbers = pageNumbers.map(function (number) {\n        var currentPageClass = '';\n\n        if (number === currentPage) {\n          currentPageClass = classes.CurrentPage;\n        }\n\n        return React.createElement(\"div\", {\n          key: number,\n          id: number,\n          onClick: _this2.handleChangePage,\n          className: currentPageClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, number);\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        className: classes.DisplayWorkContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, renderProjects), React.createElement(\"div\", {\n        className: classes.Pager,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, renderPageNumbers), React.createElement(ProjectModal, {\n        isOpen: this.state.isProjectModalOpen,\n        project: this.state.projectModalObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DisplayWork;\n}(Component);\n\nexport default DisplayWork;","map":{"version":3,"sources":["/Users/ben.cavenagh/Desktop/Personal/sean/src/DisplayWork/DisplayWork.js"],"names":["React","Component","classes","ProjectModal","DisplayWork","props","state","currentPage","projectsPerPage","isProjectModalOpen","projectModalObject","handleChangePage","bind","openProjectModal","event","setState","Number","target","id","project","console","log","backgroundImage","wood","projects","indexOfLastProject","indexOfFirstProject","currentProjects","slice","renderProjects","map","index","Project","background","ProjectInfo","ProjectTitle","name","ProjectPrice","price","ProjectDetailsButton","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","currentPageClass","CurrentPage","title","DisplayWorkContainer","Pager"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './DisplayWork.module.scss';\nimport ProjectModal from '../ProjectModal/ProjectModal';\n\nclass DisplayWork extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            currentPage:1,\n            projectsPerPage:3,\n            isProjectModalOpen: false,\n            projectModalObject: {}\n        }\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.openProjectModal = this.openProjectModal.bind(this);\n        \n    }\n    handleChangePage(event){\n        this.setState({\n            currentPage: Number(event.target.id)\n        });\n    }\n    openProjectModal(project){\n        console.log(project)\n        this.setState({\n            projectModalObject:project,\n            isProjectModalOpen:true,\n        })\n    }\n    render(){\n        let backgroundImage = 'url(https://source.unsplash.com/kKzbyDeb62M) center center';\n        if(this.props.wood){\n            backgroundImage = 'url(https://source.unsplash.com/oJ7SV6vQfBA) center center';\n        }\n\n        const { currentPage, projectsPerPage } = this.state;\n        const projects = this.props.projects;\n\n        //Logic for displaying projects\n        const indexOfLastProject = currentPage * projectsPerPage;\n        const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n        const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n\n        const renderProjects = currentProjects.map((project, index) => {\n            return (\n                <div className={classes.Project} style={{background: backgroundImage}} key={index}>\n                    <div className={classes.ProjectInfo}>\n                        <h3 className={classes.ProjectTitle}>{project.name}</h3>\n                        <p className={classes.ProjectPrice}>{project.price}</p>\n                        <button className={classes.ProjectDetailsButton} onClick={() => this.openProjectModal(project)}>View Details</button>\n                    </div>\n                </div>\n            )\n        });\n\n        //Logic for displaying page numbers\n        const pageNumbers = [];\n        for(let i = 1; i <= Math.ceil(projects.length / projectsPerPage); i++){\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            let currentPageClass = ''\n            if(number === currentPage){currentPageClass = classes.CurrentPage}\n            return (\n                <div key={number} id={number} onClick={this.handleChangePage} className={currentPageClass}>{number}</div>\n            )\n        })\n        \n        return(\n            <>\n            <h3 className={classes.title}>{this.props.title}</h3>\n            <div className={classes.DisplayWorkContainer}>\n                {renderProjects}\n            </div>\n            <div className={classes.Pager}>{renderPageNumbers}</div>\n            <ProjectModal isOpen={this.state.isProjectModalOpen} project={this.state.projectModalObject} />\n            </>\n        );\n    }\n}\nexport default DisplayWork; "]},"metadata":{},"sourceType":"module"}