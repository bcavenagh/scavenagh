{"ast":null,"code":"import _classCallCheck from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ben.cavenagh/Desktop/Personal/sean/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ben.cavenagh/Desktop/Personal/sean/src/ProjectModal/RequestProjectForm/RequestProjectForm.js\";\nimport React, { Component } from 'react';\nimport classes from './RequestProjectForm.module.scss';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport classNames from 'classnames';\n\nvar RequestProjectForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RequestProjectForm, _Component);\n\n  function RequestProjectForm(props) {\n    var _this;\n\n    _classCallCheck(this, RequestProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RequestProjectForm).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(RequestProjectForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: classes.RequestProjectForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Request this project\"), React.createElement(Formik, {\n        initialValues: {\n          name: '',\n          email: '',\n          message: ''\n        },\n        validate: function validate(values) {\n          var errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n          setTimeout(function () {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, function (_ref2) {\n        var isSubmitting = _ref2.isSubmitting;\n        return React.createElement(Form, {\n          className: classes.Form,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Field, {\n          type: \"name\",\n          name: \"name\",\n          placeholder: \"Name*\",\n          className: classes.FormInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(Field, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email*\",\n          className: classes.FormInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(Field, {\n          component: \"textarea\",\n          name: \"message\",\n          placeholder: \"Message*\",\n          className: classNames(classes.FormInput, classes.TextArea),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"password\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Submit\"));\n      }));\n    }\n  }]);\n\n  return RequestProjectForm;\n}(Component);\n\nexport default RequestProjectForm;","map":{"version":3,"sources":["/Users/ben.cavenagh/Desktop/Personal/sean/src/ProjectModal/RequestProjectForm/RequestProjectForm.js"],"names":["React","Component","classes","Formik","Form","Field","ErrorMessage","classNames","RequestProjectForm","props","state","name","email","message","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","FormInput","TextArea"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './RequestProjectForm.module.scss';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport classNames from 'classnames';\n\nclass RequestProjectForm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    render(){\n        return(\n            <div className={classes.RequestProjectForm}>\n                <h4>Request this project</h4>\n                <Formik\n                    initialValues={{ name: '', email: '', message: '' }}\n                    validate={values => {\n                        let errors = {};\n                        if (!values.email) {\n                            errors.email = 'Required';\n                        } else if (\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                            errors.email = 'Invalid email address';\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                        alert(JSON.stringify(values, null, 2));\n                        setSubmitting(false);\n                        }, 400);\n                    }}\n                    \n                    >\n                    {({ isSubmitting }) => (\n                        <Form className={classes.Form}>\n                            <Field type=\"name\" name=\"name\" placeholder=\"Name*\" className={classes.FormInput}/>\n                            <Field type=\"email\" name=\"email\" placeholder=\"Email*\" className={classes.FormInput}/>\n                            <ErrorMessage name=\"email\" component=\"div\" />\n                            <Field component=\"textarea\" name=\"message\" placeholder=\"Message*\" className={classNames(classes.FormInput, classes.TextArea)}/>\n                            <ErrorMessage name=\"password\" component=\"div\" />\n                            <button type=\"submit\" disabled={isSubmitting}>\n                                Submit\n                            </button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}\nexport default RequestProjectForm; "]},"metadata":{},"sourceType":"module"}